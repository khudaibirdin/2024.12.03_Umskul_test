import logging

from aiogram import Router
from aiogram.types import Message, FSInputFile
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.models.common import Users
from app.services.auth import is_registered
from app.services.common import get_function_name
from internal.database import get_session
from internal.config import config

router = Router()


@router.message(Command("start"))
async def start_command(message: Message):  
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    """
    try:
        builder = InlineKeyboardBuilder()
        # –µ—Å–ª–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        if not is_registered(message.from_user.id):
            builder.button(text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data="register")
            photo = FSInputFile("static/images/icon.png")
            await message.answer_photo(photo, caption=config["answers"]["start_if_not_registered"], reply_markup=builder.as_markup())
        else:
            builder.button(text="–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ï–ì–≠", callback_data="enter_scores")
            builder.button(text="–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ï–ì–≠", callback_data="view_scores")
            with get_session() as session:
                user = session.query(Users).filter(Users.telegram_id == message.from_user.id).first()
            await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user.name}! üíØ\n–≠—Ç–æ –±–æ—Ç —Å–µ—Ä–≤–∏—Å–∞ —Å–±–æ—Ä–∞ –±–∞–ª–ª–æ–≤ –ï–ì–≠ –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤!\n–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç:", reply_markup=builder.as_markup())
    except Exception as e:
        logging.error(f"func: {get_function_name()}; error: {e}")